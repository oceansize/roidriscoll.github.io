<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[brick by brick]]></title>
  <link href="http://roidriscoll.github.io/atom.xml" rel="self"/>
  <link href="http://roidriscoll.github.io/"/>
  <updated>2014-08-27T22:27:12+01:00</updated>
  <id>http://roidriscoll.github.io/</id>
  <author>
    <name><![CDATA[Roi Driscoll]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Here Sometimes - Blonde Redhead]]></title>
    <link href="http://roidriscoll.github.io/blog/2014/08/27/here-sometimes-blonde-redhead/"/>
    <updated>2014-08-27T22:26:08+01:00</updated>
    <id>http://roidriscoll.github.io/blog/2014/08/27/here-sometimes-blonde-redhead</id>
    <content type="html"><![CDATA[<div class='spotify_play_button'>
<iframe src='https://embed.spotify.com/?uri=spotify:track:2OV8b287kQD4KxIuEGZ6zg ' width='300' height='380' frameborder='0' allowtransparency='true'></iframe>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lost Without Crayola]]></title>
    <link href="http://roidriscoll.github.io/blog/2014/08/26/lost-without-crayola/"/>
    <updated>2014-08-26T23:58:51+01:00</updated>
    <id>http://roidriscoll.github.io/blog/2014/08/26/lost-without-crayola</id>
    <content type="html"><![CDATA[<p>I come from a creative background. For all the weight that sentence carries, to me the most important meaning is that when left alone to my own devices I am usually able to make something with the tools available.</p>

<p>This is not the result of a carefree and indulgent childhood, but more a richochet of pure stubborness. I did not grow up drawing every evening after school, or taking art classes (I attended art school for a year when I was already working in industry as a Designer). Creativity was always something I was resigned to work at, which was fine. Until I learnt to code.</p>

<p>When you attend an institution like Makers Academy, you don&rsquo;t come out of the other side as a world-class coder. You&rsquo;re not supposed to &ndash; coding is an art form like painting, sculpture or playing the Cello. You only get great by putting the hours in, and paying attention to each little thing you do in those hours. But you do come out with tools. You have the ability to move code into thousands of different shapes, to be able to mould and bend bits and bytes to do your bidding &ndash; even if the elegance and eloquence of experience temporarily eludes you&hellip;</p>

<p>But now I find myself in an odd predicament. I have tools, and no idea how to wield them. Never before have I had such power before my fingertips, and no spark of inspiration with which to apply them &ndash; and it&rsquo;s heart-wrenching. To build for the sake of building &ndash; to play in my text editor&hellip;</p>

<p>As these thoughts haunt me I ask myself why this is so &ndash; and somewhere between now and the next hundred days, I shall bring forth an answer, and share it with you so that you might avoid such frustrations.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playlist - Husker Don't]]></title>
    <link href="http://roidriscoll.github.io/blog/2014/08/25/coffee-mug-decendents/"/>
    <updated>2014-08-25T15:26:45+01:00</updated>
    <id>http://roidriscoll.github.io/blog/2014/08/25/coffee-mug-decendents</id>
    <content type="html"><![CDATA[<div class='spotify_play_button'>
<iframe src='https://embed.spotify.com/?uri=spotify:user:skullscraper:playlist:3DTSsb8k2qXhroUjG5jR1O ' width='300' height='380' frameborder='0' allowtransparency='true'></iframe>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[100 Days]]></title>
    <link href="http://roidriscoll.github.io/blog/2014/08/25/100-days/"/>
    <updated>2014-08-25T14:40:22+01:00</updated>
    <id>http://roidriscoll.github.io/blog/2014/08/25/100-days</id>
    <content type="html"><![CDATA[<p>One of the students at Makers Academy shared <a href="http://www.karenx.com/blog/i-learned-to-dance-in-a-year/">this link</a> with me, and I have to say I really connected with the article (I suspect largely because my best dance moves tend to mimic a reanimated sea bass intent on disproving there is <a href="http://engineering.mit.edu/ask/can-computer-generate-truly-random-number">no such thing as true randomness</a>).</p>

<p>But Irish genes aside, it really got me thinking &ndash; 100 days is pretty cheap in terms of time investment, and it&rsquo;s such a nice round number! I immediately started thinking about the best ways for me to utilise the next hundred days of my calendar&hellip; What could I get my head around by December 3rd 2014? I started thinking about how I had always wanted to move like <a href="https://www.youtube.com/watch?v=Zdz88MBWomo">James Brown</a>. But how often am I going to use this skill? Is it going to bring me closer to my current life goals? In software development, we tend to group our features by priority &ndash; and being able to shuffle like a pro, well that&rsquo;s definitely in the &lsquo;Nice to Have&rsquo; pile. For now.</p>

<p>So with that said, I turned my attention immediately to the &lsquo;Must Have&rsquo; column, and oh look at that &ndash; coding was top of the list. Given that my main priority at the moment is to build some seriously sexy dev skills and get an awesome job in industry means that when it comes to goal picking, <a href="https://www.youtube.com/watch?v=ypn9LvsWGsg">there can be only one</a>. So without further ado, I am committed to pushing new code to Github once a day for at least the next 100 days. Joining me on this odyssey is <a href="http://ecomba.pro/">Ecomba</a>, who also intends to make a serious amount of squares green on his profile page. I invite you to get involved, and by the time Christmas comes around you&rsquo;ll have already given yourself an amazing present.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TNT - Tortoise]]></title>
    <link href="http://roidriscoll.github.io/blog/2014/06/22/tnt-tortoise/"/>
    <updated>2014-06-22T21:48:48+01:00</updated>
    <id>http://roidriscoll.github.io/blog/2014/06/22/tnt-tortoise</id>
    <content type="html"><![CDATA[<div class='spotify_play_button'>
<iframe src='https://embed.spotify.com/?uri=spotify:track:6VALPcarkSkBgnpklEHM0X ' width='300' height='380' frameborder='0' allowtransparency='true'></iframe>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Weekly Links #1]]></title>
    <link href="http://roidriscoll.github.io/blog/2014/06/22/weekly-links/"/>
    <updated>2014-06-22T12:06:35+01:00</updated>
    <id>http://roidriscoll.github.io/blog/2014/06/22/weekly-links</id>
    <content type="html"><![CDATA[<p>In an attempt to stop hoarding tabs, I&rsquo;m going to leave noteworthy links for week ending 22/6/14 here:</p>

<!--more-->


<p><a href="https://webdesign.tutsplus.com/tutorials/getting-started-with-octopress--webdesign-11442">Getting started with Octopress</a></p>

<p><a href="http://lifehacker.com/5596964/how-to-rebuild-your-attention-span-and-focus">Lifehacker article on focus</a></p>

<p><a href="https://code.tutsplus.com/tutorials/8-regular-expressions-you-should-know--net-6149">8 Regular Expressions you should know</a></p>

<p><a href="http://kaleistyleguide.com/">Easier stylesheet docs!</a></p>

<p><a href="http://conqueringthecommandline.com/book">Conquering The Command Line</a></p>

<p><a href="https://courses.tutsplus.com/courses/perfect-workflow-in-sublime-text-2">Perfect Workflow in Sublime Text</a></p>

<p><a href="https://github.com/ngauthier/domino">Domino</a> is a gem that makes writing Capybara tests a little easier. You can see a <a href="https://www.youtube.com/watch?v=qRBBbqziylc">Ruby Study Hall demo</a> after the jump.</p>

<p><a href="http://macdevelopertips.com/ruby/using-a-stack-with-ruby.html">Using a stack with Ruby</a></p>

<p><a href="http://computinglife.wordpress.com/2008/11/20/why-do-hash-functions-use-prime-numbers/">Why do hash functions use prime numbers?</a> courtesy of <a href="https://github.com/jpatel531">Jamie</a></p>

<p><a href="http://larry-price.com/blog/2013/01/19/testing-a-sinatra-app-with-capybara/">Testing a Sinatra app with Capybara</a></p>

<p>Ruby&rsquo;s <a href="http://www.ruby-doc.org/core-2.1.2/Struct.html">Struct</a> method.</p>

<p><a href="http://host.madison.com/entertainment/arts_and_theatre/books/q-a-make-friends-with-math/article_2da7c6f3-ba4c-5f02-8db3-b0fbc7e1d287.html">Make friends with Math</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Seeing Is Believing]]></title>
    <link href="http://roidriscoll.github.io/blog/2014/06/21/seeing-is-believing/"/>
    <updated>2014-06-21T10:55:07+01:00</updated>
    <id>http://roidriscoll.github.io/blog/2014/06/21/seeing-is-believing</id>
    <content type="html"><![CDATA[<p>Since embarking on my programming journey, I have to admit &ndash; I have gone a little gem-crazy. It&rsquo;s just so EASY to type &lsquo;gem install the_promise_of_magic&rsquo;. I think that&rsquo;s one of the more dangerous aspects of living in the command line. When I&rsquo;m considering installing something via the browser, there are a multitude of clues to help you ascertain whether or not a binary is legit, not least how polished their site looks.</p>

<!--more-->


<p>There is also a kind of false sense of security that can set in when you&rsquo;ve been a Mac user for your entire adult life, and have not traditionally had much cause to worry about virus issues etc- so to just type three words into your iTerm and wait for your latest library to make itself comfortable in your filesystem takes little effort. This is something I have noticed and am now very mindful of &ndash; but I digress&hellip;</p>

<p>This post is really to draw your attention to a frankly wonderful wee gem I found this week, called &lsquo;Seeing Is Believing&rsquo;, developed by <a href="http://joshcheek.com/seeing_is_believing">Mr Josh Cheek</a>. Based on an existing gem called <a href="https://rubygems.org/gems/rcodetools">rcodetools</a>, it automagically places a comment at the end of each line of ruby code containing the evaluation. Pretty friggin&#8217; useful for a beginner. You can see a video of this little beaut being demonstrated <a href="http://vimeo.com/73866851">here</a>.</p>

<p>So how could this be even better Roi? How about Sublime Text integration? <a href="https://github.com/JoshCheek/sublime-text-2-seeing-is-believing">Ding Dong!</a> (Josh also supports Textmate 1-2 and Vim)</p>

<p>There is one wee-tiny-little catch &ndash; if you&rsquo;re new at this stuff, the documentation is a little bit sparse (I found the whole rvm wrapper thing a bit mysterious to say the least), so I thought I would do a quick write-up. Now bear in mind that I work with a ruby version of 2.1.1 on a mac using rvm <a href="https://rvm.io/rvm/basics">Ruby Version Manager</a> so I can only tell you what worked for me, and this is it.</p>

<p>First one must install the gem:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install seeing_is_believing</span></code></pre></td></tr></table></div></figure>


<p>Then you need to navigate to the following folder:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ~/Library/Application\ Support/Sublime\ Text\ 2/Packages</span></code></pre></td></tr></table></div></figure>


<p>and inside of that directory, clone this repo:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/JoshCheek/sublime-text-2-seeing-is-believing.git SeeingIsBelieving</span></code></pre></td></tr></table></div></figure>


<p>If this is confusing for you, I would recommend researching into how to navigate your file system using the <a href="http://learncodethehardway.org/cli/book/cli-crash-course.html">command line</a> and basic usage of <a href="https://try.github.io">Git</a>.
Next up, you need to make a wrapper for Sublime (this is the bit that I found confusing), and for this you need to know which version of ruby you are currently running. On my setup, I can type <code>ruby -v</code> and am rewarded with the output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby 2.1.1p76 (2014-02-24 revision 45161) [x86_64-darwin12.0]</span></code></pre></td></tr></table></div></figure>


<p>I take the section <code>ruby 2.1.1</code> and type the following into Terminal:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm wrapper ruby-2.1.1 sublime</span></code></pre></td></tr></table></div></figure>


<p>Now, at this point you need to run the following command in terminal : <code>which sublime_ruby</code>, which will return a line like this: <code>/Users/your-username/.rvm/bin/sublime_ruby</code>
At this point, you need to open &lsquo;SeeingIsBelieving/Seeing Is Believing.sublime-settings&rsquo; in Sublime Text and comment out the line <code>"RBENV_VERSION": "2.0.0-p0"</code> and the MOST important part: delete <code>"ruby_command": "~/.rbenv/shims/ruby",</code> and replace with the following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"ruby_command": "~/.rvm/bin/sublime_ruby",</span></code></pre></td></tr></table></div></figure>


<p>where the line <code>"~/.rvm/bin/sublime_ruby",</code> matches the line you got when you typed in <code>which sublime_ruby</code> &ndash; remember that? ;)</p>

<p>Restart Sublime Text, and enter some ruby code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">10</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">*</span> <span class="mi">2</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now if you hit the pre-defined keyboard shortcut (⌥ + ⌘ + B on OS X) or run the command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Evaluate</span> <span class="no">Ruby</span> <span class="n">code</span> <span class="n">with</span> <span class="no">Seeing</span> <span class="no">Is</span> <span class="no">Believing</span>
</span></code></pre></td></tr></table></div></figure>


<p>from your command pallete (⌘ + ⇧ + P), you should see the following output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">10</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">*</span> <span class="mi">2</span>          <span class="c1"># =&gt; 0, 2, 4, 6, 8, 10, 12, 14, 16, 18</span>
</span><span class='line'><span class="k">end</span>              <span class="c1"># =&gt; 10</span>
</span></code></pre></td></tr></table></div></figure>


<p>To remove the comments, run <code>Remove Seeing Is Believing annotations</code> or press (⌥ + ⌘ + V on OS X). And you are back to the original.</p>

<p>Well there you have it &ndash; instant win! I strongly suggest that you take the time to watch Josh&rsquo;s video (and browse the documention I linked to earlier) &ndash; I have directly referenced a lot of the material for this article and I cannot recommend this enough as a tool to get your head around what ruby is doing when it evaluates your code.</p>

<p>Happy coding! ^_^</p>
]]></content>
  </entry>
  
</feed>
